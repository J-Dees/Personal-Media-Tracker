
--Books Table
create table
  public.books (
    id bigint generated by default as identity not null,
    book_title text not null,
    author text not null,
    constraint books_pkey primary key (id)
  ) tablespace pg_default;
--Games Table
create table
  public.games (
    id bigint generated by default as identity not null,
    game_title text not null,
    year bigint not null,
    constraint games_pkey primary key (id)
  ) tablespace pg_default;
--Movies Table
create table
  public.movies (
    id bigint generated by default as identity not null,
    movie_title text not null,
    year bigint not null,
    constraint movies_pkey primary key (id),
    constraint movies_id_key unique (id)
  ) tablespace pg_default;
  --Users Table
create table
  public.users (
    id bigint generated by default as identity not null,
    name text null,
    constraint user_pkey primary key (id),
    constraint users_name_key unique (name)
  ) tablespace pg_default;
--Catalogs Table
create table
  public.catalogs (
    id bigint generated by default as identity not null,
    user_id bigint null,
    name text null,
    type public.entry_types null,
    private boolean not null default false,
    constraint catalogs_pkey primary key (id),
    constraint catalogs_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;
--All Entries Table
create table
  public.entries (
    id bigint generated by default as identity not null,
    catalog_id bigint not null,
    private boolean not null default false,
    recommend boolean null,
    date_created timestamp with time zone not null default now(),
    constraint entries_pkey primary key (id),
    constraint entries_catalog_id_fkey foreign key (catalog_id) references catalogs (id) on update cascade on delete cascade
  ) tablespace pg_default;
--Book Entries Table
create table
  public.book_entry (
    entry_id bigint generated by default as identity not null,
    book_id bigint null,
    date_read date null,
    opinion text not null default ''::text,
    rating real null,
    read_again boolean null,
    constraint book_entry_pkey primary key (entry_id),
    constraint book_entry_book_id_fkey foreign key (book_id) references books (id) on update cascade on delete cascade,
    constraint book_entry_entry_id_fkey foreign key (entry_id) references entries (id) on update cascade on delete cascade
  ) tablespace pg_default;
--Game Entries Table
create table
  public.game_entry (
    entry_id bigint generated by default as identity not null,
    game_id bigint null,
    hours_played real null,
    opinion text not null default ''::text,
    rating real null,
    play_again boolean null,
    constraint game_entry_pkey primary key (entry_id),
    constraint game_entry_entry_id_fkey foreign key (entry_id) references entries (id) on update cascade on delete cascade,
    constraint game_entry_game_id_fkey foreign key (game_id) references games (id) on update cascade on delete cascade
  ) tablespace pg_default;
  --Movie Entries Table
  create table
  public.movie_entry (
    entry_id bigint generated by default as identity not null,
    movie_id bigint null,
    date_seen date null,
    opinion text not null default ''::text,
    rating real null,
    watch_again boolean null,
    constraint movie_entry_pkey primary key (entry_id),
    constraint movie_entry_entry_id_fkey foreign key (entry_id) references entries (id) on update cascade on delete cascade,
    constraint movie_entry_movie_id_fkey foreign key (movie_id) references movies (id) on update cascade on delete cascade
  ) tablespace pg_default;
--Other Entries Table
  create table
  public.other_entry (
    entry_id bigint generated by default as identity not null,
    title text not null default ''::text,
    description text not null default ''::text,
    price numeric null,
    quality text null,
    date_obtained date null,
    constraint other_entry_pkey primary key (entry_id),
    constraint other_entry_entry_id_fkey foreign key (entry_id) references entries (id) on update cascade on delete cascade
  ) tablespace pg_default;
--Social Table for follows.
create table
  public.social (
    user_id bigint not null,
    follower_id bigint not null,
    constraint social_pkey primary key (user_id, follower_id),
    constraint social_follower_id_key unique (follower_id),
    constraint social_user_id_key unique (user_id),
    constraint social_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;